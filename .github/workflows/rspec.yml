name: RSpec

on: [push]

jobs:
  check_commit:
    runs-on: ubuntu-latest
    outputs:
      skip: ${{ steps.skip_check.outputs.skip }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check for skip ci tag in commit message
        id: skip_check
        shell: bash
        run: |
          msg="$(git log -1 --pretty=%B)"
          if echo "$msg" | grep -E '\[skip ci\]|\[ci skip\]|\[no ci\]'; then
            echo "skip=true" >> "$GITHUB_OUTPUT"
          else
            echo "skip=false" >> "$GITHUB_OUTPUT"
          fi

  rspec:
    needs: check_commit
    if: needs.check_commit.outputs.skip == 'false'
    runs-on: ubuntu-latest
    name: Run RSpec tests

    services:
      postgres:
        image: postgres:13.2
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.4
          bundler-cache: true
          cache-version: 2

      - uses: actions/setup-node@v4
        with:
          node-version: 16.19.0

      - name: Cache Bundler
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: bundler-${{ hashFiles('Gemfile.lock') }}
          restore-keys: |
            bundler-

      - name: Install dependent libraries
        run: sudo apt-get install libpq-dev

      - name: Install dependencies
        run: |
          gem install bundler
          bundle install --path vendor/bundle

      - name: Set up test database
        run: |
          cp config/database.yml.github-actions config/database.yml
          bundle exec rake db:create db:schema:load
          bundle exec rake db:migrate RAILS_ENV=test
          bundle exec rake db:fixtures:load
        env:
          RAILS_ENV: test
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          DB_NAME: centralized_logging_test
          DB_USER: ${{ secrets.POSTGRES_USER }}
          DB_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          HOST_NAME: localhost
          APP_HOME: https://test-host/

      - name: Get Yarn Cache
        id: yarn-cache
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Yarn Install
        run: yarn check || yarn install

      - name: Assets Cache
        id: assets-cache
        uses: actions/cache@v4
        with:
          path: public/packs-test
          key: ${{ runner.os }}-assets-${{ steps.extract_branch.outputs.branch }}
          restore-keys: |
            ${{ runner.os }}-assets-

      - name: Run RSpec tests
        env:
          DB_NAME: centralized_logging_test
          DB_USER: ${{ secrets.POSTGRES_USER }}
          DB_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          HOST_NAME: localhost
          APP_HOME: https://test-host/
        run: |
          bundle exec rspec
